import tornado.web
import tornado.auth
import tornado.escape
import json

import pymongo
from uuid import uuid4
import tornado.template 
import urllib 



class Main(tornado.web.RequestHandler):
	def initialize(self):
		self.nextUrl = ""
		self.state = ""	

	@tornado.gen.coroutine
	def get(self):
		url,state = self.make_auth_url()
		self.render('testmain.html', auth_url = url,state = state)

	def make_auth_url(self):
		CLIENT_ID = "rfszuzHlfUaa5D5n4cLGUwLMV8mWn7HAii1VuxBI" # Fill this in with your client ID
		CLIENT_SECRET = "IPuZtbSq4dge35W5hjTvO5B7I5EKvpdjDDKM5Fvo" # Fill this in with your client secret
		REDIRECT_URI = "http://tokyo.x-in-y.com:8889/test_callback"
 
		state = str(uuid4())
    		self.state = state
    		params = {"client_id": CLIENT_ID,
              			"response_type": "code",
              			"state": state,
              			"redirect_uri": REDIRECT_URI,
              			"duration": "temporary",
              			"scope": "identity"}
    		url = "http://tokyo.x-in-y.com:3000/oauth/authorize?" + urllib.urlencode(params)
    		return url,state
  	
class Callback(tornado.web.RequestHandler):
	def initialize(self):
		self.nextUrl = ""
	

	@tornado.gen.coroutine
	def get(self):
		error = request.args.get('error', '')
    		if error:
        		return "Error: " + error
    		state = request.args.get('state', '')
    		if not is_valid_state(state):
        		# Uh-oh, this request wasn't started by us!
        		abort(403)
    		code = request.args.get('code')
    		
                #access_token = get_token(code)
		return "got a code ! %s" %code
		#self.render('testcallback.html')

	def get_token(code):
		CLIENT_ID = "rfszuzHlfUaa5D5n4cLGUwLMV8mWn7HAii1VuxBI" # Fill this in with your client ID
		CLIENT_SECRET = "IPuZtbSq4dge35W5hjTvO5B7I5EKvpdjDDKM5Fvo" # Fill this in with your client secret
		REDIRECT_URI = "http://tokyo.x-in-y.com:8889/test_callback"
    		client_auth = requests.auth.HTTPBasicAuth(CLIENT_ID, CLIENT_SECRET)
    		post_data = {"grant_type": "authorization_code",
                 "code": code,
                 "redirect_uri": REDIRECT_URI}
    		headers = base_headers()
    		response = requests.post("http://tokyo.x-in-y.com:3000/oauth/access_token",
                             auth=client_auth,
                             headers=headers,
                             data=post_data)
    		token_json = response.json()
    		return token_json["access_token"]
